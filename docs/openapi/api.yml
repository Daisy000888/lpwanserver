openapi: 3.0.1
servers: []
info:
  description: >-
    This service goes between an IoT application server and the various networks
    to which the devices connect.  LPWAN Server uses extensions to support
    additional networks.
  version: 2.0.0
  title: LPWAN Server
  contact:
    email: n.baroni@cablelabs.com
    name: Nick Baroni
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Application
    description: An Application is a grouping of devices that share data reporting configuration.
  - name: ApplicationNetworkTypeLink
    description: An ApplicationNetworkTypeLink enables an Application for a NetworkType.  These records store Application configuration for the NetworkType.
  - name: Device
    description: A Device represents a physical device.
  - name: DeviceNetworkTypeLink
    description: A DeviceNetworkTypeLink enables a Device for a NetworkType.  These records store Device configuration for a the NetworkType.
  - name: DeviceProfile
    description: A DeviceProfile profiles a type of device for a specific NetworkType.  These records store Device configuration for the NetworkType.
  - name: Network
    description: A Network represents an IoT device network.
  - name: NetworkDeployment
    description: A NetworkDeployment represents the deployment of one Application, Device, or DeviceProfile on a remote network.
  - name: NetworkProtocol
    description: A NetworkProtocol represents a unique Network API.  A NeworkProtocol represents the code responsible for calling a remote network's API.
  - name: NetworkType
    description: A NetworkType represents a unique LPWAN type, such as LoRaWAN.
  - name: ReportingProtocol
    description: ReportingProtocols are used by the Application to forward data from the devices to the IoT application server.
  - name: Session
    description: Session endpoints allow for the management of User authentication.
  - name: User
    description: A user of the system.  Users can have the role ADMIN or USER.  In general, ADMINs can do anything and USERs are restricted to Application and Device management.
paths:
  /api/applications:
    $ref: 'endpoints/application.yml#/paths/~1api~1applications'
  /api/applications/{id}:
    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}'
  /api/applications/{id}/devices/bulk-create:
    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}~1devices~1bulk-create'
  /api/application-network-type-links:
    $ref: 'endpoints/application-network-type-link.yml#/paths/~1api~1application-network-type-links'
  /api/application-network-type-links/{id}:
    $ref: 'endpoints/application-network-type-link.yml#/paths/~1api~1application-network-type-links~1{id}'
  /api/application-network-type-links/{id}/push:
    $ref: 'endpoints/application-network-type-link.yml#/paths/~1api~1application-network-type-links~1{id}~1push'
  /api/devices:
    $ref: 'endpoints/device.yml#/paths/~1api~1devices'
  /api/devices/{id}:
    $ref: 'endpoints/device.yml#/paths/~1api~1devices~1{id}'
  /api/devices/{id}/downlinks:
    $ref: 'endpoints/device.yml#/paths/~1api~1devices~1{id}~1downlinks'
  /api/uplinks:
    $ref: 'endpoints/device.yml#/paths/~1api~1uplinks'
  /api/uplinks/{applicationId}:
    $ref: 'endpoints/device.yml#/paths/~1api~1uplinks~1{applicationId}'
  /api/downlinks:
    $ref: 'endpoints/device.yml#/paths/~1api~1downlinks'
  /api/device-network-type-links:
    $ref: 'endpoints/device-network-type-link.yml#/paths/~1api~1device-network-type-links'
  /api/device-network-type-links/{id}:
    $ref: 'endpoints/device-network-type-link.yml#/paths/~1api~1device-network-type-links~1{id}'
  /api/device-network-type-links/{id}/push:
    $ref: 'endpoints/device-network-type-link.yml#/paths/~1api~1device-network-type-links~1{id}~1push'
  /api/device-profiles:
    $ref: 'endpoints/device-profile.yml#/paths/~1api~1device-profiles'
  /api/device-profiles/{id}:
    $ref: 'endpoints/device-profile.yml#/paths/~1api~1device-profiles~1{id}'
  /api/device-profiles/{id}/push:
    $ref: 'endpoints/device-profile.yml#/paths/~1api~1device-profiles~1{id}~1push'
  /api/networks:
    $ref: 'endpoints/network.yml#/paths/~1api~1networks'
  /api/networks/{id}:
    $ref: 'endpoints/network.yml#/paths/~1api~1networks~1{id}'
  /api/network-deployments:
    $ref: 'endpoints/network-deployment.yml#/paths/~1api~1network-deployments'
  /api/network-deployments/{id}:
    $ref: 'endpoints/network-deployment.yml#/paths/~1api~1network-deployments~1{id}'
  /api/network-protocols:
    $ref: 'endpoints/network-protocol.yml#/paths/~1api~1network-protocols'
  /api/network-protocols/{id}:
    $ref: 'endpoints/network-protocol.yml#/paths/~1api~1network-protocols~1{id}'
  /api/network-types:
    $ref: 'endpoints/network-type.yml#/paths/~1api~1network-types'
  /api/network-types/{id}:
    $ref: 'endpoints/network-type.yml#/paths/~1api~1network-types~1{id}'
  /api/reporting-protocols:
    $ref: 'endpoints/reporting-protocol.yml#/paths/~1api~1reporting-protocols'
  /api/reporting-protocols/{id}:
    $ref: 'endpoints/reporting-protocol.yml#/paths/~1api~1reporting-protocols~1{id}'
  /api/sessions:
    $ref: 'endpoints/session.yml#/paths/~1api~1sessions'
  /api/users:
    $ref: 'endpoints/user.yml#/paths/~1api~1users'
  /api/users/{id}:
    $ref: 'endpoints/user.yml#/paths/~1api~1users~1{id}'
  /api/users/me:
    $ref: 'endpoints/user.yml#/paths/~1api~1users~1me'
components:
  securitySchemes:
    bearer_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basic_auth:
      type: http
      scheme: basic
  parameters:
    offsetParam:
      name: offset
      in: query
      description: Number of records to skip
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    limitParam:
      name: limit
      in: query
      description: Max records to return
      required: false
      schema:
        type: integer
    nameSearch:
      name: search
      in: query
      description: Search for a string within name
      required: false
      schema:
        type: string
    idParam:
      name: id
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
    applicationId:
      name: applicationId
      in: query
      description: The ID of the Application
      required: false
      schema:
        type: string
    networkTypeId:
      name: networkTypeId
      in: query
      description: The ID of the NetworkType
      required: false
      schema:
        type: string
    networkId:
      name: networkId
      in: query
      description: The ID of the Network
      required: false
      schema:
        type: string
    deviceId:
      name: deviceId
      in: query
      description: The ID of the Device
      required: false
      schema:
        type: string
    deviceProfileId:
      name: deviceProfileId
      in: query
      description: The ID of the DeviceProfile
      required: false
      schema:
        type: string
    pushDevices:
      name: pushDevices
      in: query
      description: Whether or not to also push all associated devices
      required: false
      schema:
        type: string
        enum:
        - 'true'
        - 'false'
  schemas:
    ResourceCreatedResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    ListResponse:
      type: object
      required:
        - totalCount
      properties:
        totalCount:
          type: integer
