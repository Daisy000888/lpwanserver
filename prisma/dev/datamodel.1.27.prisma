type ApplicationNetworkTypeLink @pgTable(name: "applicationNetworkTypeLinks") {
  application: Application! @pgRelation(column: "applicationId")
  id: Int! @id @unique
  networkSettings: String
  networkType: NetworkType! @pgRelation(column: "networkTypeId")
}

type Application @pgTable(name: "applications") {
  applicationNetworkTypeLinks: [ApplicationNetworkTypeLink!]!
  baseUrl: String
  company: Company @pgRelation(column: "companyId")
  description: String
  devices: [Device!]!
  id: Int! @id @unique
  name: String
  reportingProtocol: ReportingProtocol @pgRelation(column: "reportingProtocolId")
}

type Company @pgTable(name: "companies") {
  applications: [Application!]!
  companyNetworkTypeLinks: [CompanyNetworkTypeLink!]!
  deviceProfiles: [DeviceProfile!]!
  id: Int! @id @unique
  name: String
  passwordPolicies: [PasswordPolicy!]!
  type: CompanyType @pgRelation(column: "type")
  users: [User!]!
}

type CompanyNetworkTypeLink @pgTable(name: "companyNetworkTypeLinks") {
  company: Company! @pgRelation(column: "companyId")
  id: Int! @id @unique
  networkSettings: String
  networkType: NetworkType! @pgRelation(column: "networkTypeId")
}

type CompanyType @pgTable(name: "companyTypes") {
  companies: [Company!]!
  id: Int! @id @pgColumn(name: "type") @unique
  name: String
}

type DeviceNetworkTypeLink @pgTable(name: "deviceNetworkTypeLinks") {
  device: Device @pgRelation(column: "deviceId")
  deviceProfile: DeviceProfile @pgRelation(column: "deviceProfileId")
  id: Int! @id @unique
  networkSettings: String
  networkType: NetworkType @pgRelation(column: "networkTypeId")
}

type DeviceProfile @pgTable(name: "deviceProfiles") {
  company: Company @pgRelation(column: "companyId")
  description: String
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  id: Int! @id @unique
  name: String
  networkSettings: String
  networkType: NetworkType @pgRelation(column: "networkTypeId")
}

type Device @pgTable(name: "devices") {
  application: Application! @pgRelation(column: "applicationId")
  description: String
  deviceModel: String
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  id: Int! @id @unique
  name: String
}

type EmailVerification @pgTable(name: "emailVerifications") {
  changeRequested: String
  email: String
  id: Int! @id @unique
  user: User @pgRelation(column: "userId")
  uuid: String
}

type NetworkProtocol @pgTable(name: "networkProtocols") {
  id: Int! @id @unique
  masterProtocol: NetworkProtocol @pgRelation(column: "masterProtocol") @relation(name: "NetworkProtocolMasterProtocol")
  name: String
  networkProtocols: [NetworkProtocol!]! @relation(name: "MasterProtocolNetworkProtocols")
  networkProtocolVersion: String
  networks: [Network!]!
  networkType: NetworkType @pgRelation(column: "networkTypeId")
  protocolDatas: [ProtocolData!]!
  protocolHandler: String
}

type NetworkProvider @pgTable(name: "networkProviders") {
  id: Int! @id @unique
  name: String
  networks: [Network!]!
}

type Network @pgTable(name: "networks") {
  baseUrl: String
  id: Int! @id @unique
  name: String
  networkProtocol: NetworkProtocol @pgRelation(column: "networkProtocolId")
  networkProvider: NetworkProvider @pgRelation(column: "networkProviderId")
  networkType: NetworkType @pgRelation(column: "networkTypeId")
  protocolDatas: [ProtocolData!]!
  securityData: String
}

type NetworkType @pgTable(name: "networkTypes") {
  applicationNetworkTypeLinks: [ApplicationNetworkTypeLink!]!
  companyNetworkTypeLinks: [CompanyNetworkTypeLink!]!
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  deviceProfiles: [DeviceProfile!]!
  id: Int! @id @unique
  name: String
  networkProtocols: [NetworkProtocol!]!
  networks: [Network!]!
}

type PasswordPolicy @pgTable(name: "passwordPolicies") {
  company: Company @pgRelation(column: "companyId")
  id: Int! @id @unique
  ruleRegExp: String
  ruleText: String
}

type ProtocolData @pgTable(name: "protocolData") {
  dataIdentifier: String
  dataValue: String
  id: Int! @id @unique
  network: Network @pgRelation(column: "networkId")
  networkProtocol: NetworkProtocol @pgRelation(column: "networkProtocolId")
}

type ReportingProtocol @pgTable(name: "reportingProtocols") {
  applications: [Application!]!
  id: Int! @id @unique
  name: String
  protocolHandler: String
}

type UserRole @pgTable(name: "userRoles") {
  id: Int! @id @pgColumn(name: "roleId") @unique
  name: String
  users: [User!]!
}

type User @pgTable(name: "users") {
  company: Company @pgRelation(column: "companyId")
  email: String!
  emailVerifications: [EmailVerification!]!
  emailVerified: Boolean @default(value: false)
  id: Int! @id @unique
  lastVerifiedEmail: String
  passwordHash: String
  role: UserRole @pgRelation(column: "role")
  username: String
}