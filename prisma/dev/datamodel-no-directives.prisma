type ApplicationNetworkTypeLink {
  application: Application!
  id: ID! @unique
  networkSettings: String
  networkType: NetworkType!
}

type Application {
  applicationNetworkTypeLinks: [ApplicationNetworkTypeLink!]!
  baseUrl: String
  company: Company
  description: String
  devices: [Device!]!
  id: ID! @unique
  name: String
  reportingProtocol: ReportingProtocol
}

type Company {
  applications: [Application!]!
  companyNetworkTypeLinks: [CompanyNetworkTypeLink!]!
  deviceProfiles: [DeviceProfile!]!
  id: ID! @unique
  name: String
  passwordPolicies: [PasswordPolicy!]!
  type: CompanyType
  users: [User!]!
}

type CompanyNetworkTypeLink {
  company: Company!
  id: ID! @unique
  networkSettings: String
  networkType: NetworkType!
}

type CompanyType {
  companies: [Company!]!
  id: ID! @unique
  name: String
}

type DeviceNetworkTypeLink {
  device: Device
  deviceProfile: DeviceProfile
  id: ID! @unique
  networkSettings: String
  networkType: NetworkType
}

type DeviceProfile {
  company: Company
  description: String
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  id: ID! @unique
  name: String
  networkSettings: String
  networkType: NetworkType
}

type Device {
  application: Application!
  description: String
  deviceModel: String
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  id: ID! @unique
  name: String
}

type EmailVerification {
  changeRequested: String
  email: String
  id: ID! @unique
  user: User
  uuid: String
}

type NetworkProtocol {
  id: ID! @unique
  masterProtocol: NetworkProtocol @relation(name: "NetworkProtocolMasterProtocol")
  name: String
  networkProtocols: [NetworkProtocol!] @relation(name: "MasterProtocolNetworkProtocols")
  networkProtocolVersion: String
  networks: [Network!]!
  networkType: NetworkType
  protocolDatas: [ProtocolData!]!
  protocolHandler: String
}

type NetworkProvider {
  id: ID! @unique
  name: String
  networks: [Network!]!
}

type Network {
  baseUrl: String
  id: ID! @unique
  name: String
  networkProtocol: NetworkProtocol
  networkProvider: NetworkProvider
  networkType: NetworkType
  protocolDatas: [ProtocolData!]!
  securityData: String
}

type NetworkType {
  applicationNetworkTypeLinks: [ApplicationNetworkTypeLink!]!
  companyNetworkTypeLinks: [CompanyNetworkTypeLink!]!
  deviceNetworkTypeLinks: [DeviceNetworkTypeLink!]!
  deviceProfiles: [DeviceProfile!]!
  id: ID! @unique
  name: String
  networkProtocols: [NetworkProtocol!]!
  networks: [Network!]!
}

type PasswordPolicy {
  company: Company
  id: ID! @unique
  ruleRegExp: String
  ruleText: String
}

type ProtocolData {
  dataIdentifier: String
  dataValue: String
  id: ID! @unique
  network: Network
  networkProtocol: NetworkProtocol
}

type ReportingProtocol {
  applications: [Application!]!
  id: ID! @unique
  name: String
  protocolHandler: String
}

type UserRole {
  id: ID! @unique
  name: String
  users: [User!]!
}

type User{
  company: Company
  email: String!
  emailVerifications: [EmailVerification!]!
  emailVerified: Boolean @default(value: false)
  id: ID! @unique
  lastVerifiedEmail: String
  passwordHash: String
  role: UserRole
  username: String
}